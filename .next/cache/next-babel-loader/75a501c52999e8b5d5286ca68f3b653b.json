{"ast":null,"code":"var _jsxFileName = \"/home/aytac/repos/ataspor/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport ImageLink from '../components/imageLink';\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  async function fetchEntries() {\n    const entries = await client.getEntries();\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Next.js + Contentful\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), pages.length > 0 ? pages.map(p => __jsx(ImageLink, {\n    alt: p.fields.alt,\n    date: p.fields.date,\n    key: p.fields.title,\n    image: p.fields.image,\n    title: p.fields.title,\n    url: p.fields.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })) : null);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/index.js"],"names":["useEffect","useState","Head","ImageLink","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","HomePage","fetchEntries","entries","getEntries","items","console","log","contentType","name","pages","length","map","p","fields","alt","date","title","image","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BAD6B;AAEhDC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFuB,CAAnC,CAAf;;AAKA,SAASC,QAAT,GAAoB;AAClB,iBAAeC,YAAf,GAA8B;AAC5B,UAAMC,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAP,EAAtB;AACA,QAAID,OAAO,CAACE,KAAZ,EAAmB,OAAOF,OAAO,CAACE,KAAf;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BC,WAAW,CAACC,IAAK,GAA1D;AACD;;AAID,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASGC,KAAK,CAACC,MAAN,GAAe,CAAf,GACGD,KAAK,CAACE,GAAN,CAAUC,CAAC,IACT,MAAC,SAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACC,MAAF,CAASC,GADhB;AAEE,IAAA,IAAI,EAAEF,CAAC,CAACC,MAAF,CAASE,IAFjB;AAGE,IAAA,GAAG,EAAEH,CAAC,CAACC,MAAF,CAASG,KAHhB;AAIE,IAAA,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASI,KAJlB;AAKE,IAAA,KAAK,EAAEL,CAAC,CAACC,MAAF,CAASG,KALlB;AAME,IAAA,GAAG,EAAEJ,CAAC,CAACC,MAAF,CAASK,GANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAWG,IApBN,CADF;AAwBD;;AAED,eAAelB,QAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport ImageLink from '../components/imageLink'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchEntries() {\n    const entries = await client.getEntries()\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\" \n        />\n      </Head>\n      {pages.length > 0\n        ? pages.map(p => (\n            <ImageLink\n              alt={p.fields.alt}\n              date={p.fields.date}\n              key={p.fields.title}\n              image={p.fields.image}\n              title={p.fields.title}\n              url={p.fields.url}\n            />\n          ))\n        : null}\n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}