{"ast":null,"code":"var _jsxFileName = \"/home/aytac/repos/ataspor/pages/mannschaften.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport ImageLink from '../components/imageLink';\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction Mannschaften() {\n  async function fetchPlayerEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'player'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const {\n    0: players,\n    1: setImageLinks\n  } = useState([]); //useEffect hook retrieves posts on initial load.\n\n  useEffect(() => {\n    async function getPlayers() {\n      const allPlayers = await fetchPlayerEntries();\n      setImageLinks([...allPlayers]);\n    }\n\n    getPlayers();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Spieler\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), players.length > 0 ? players.map(p => __jsx(Players, {\n    name: p.fields.name,\n    image: p.fields.image,\n    nummer: p.fields.image,\n    mannschaft: p.fields.mannschaft,\n    active: p.fields.active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })) : null);\n}\n\nexport default Mannschaften;","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/mannschaften.js"],"names":["useEffect","useState","Head","ImageLink","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","Mannschaften","fetchPlayerEntries","entries","getEntries","items","console","log","contentType","name","players","setImageLinks","getPlayers","allPlayers","length","map","p","fields","image","mannschaft","active"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BAD6B;AAEhDC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFuB,CAAnC,CAAf;;AAKA,SAASC,YAAT,GAAwB;AACtB,iBAAeC,kBAAf,GAAoC;AAClC,UAAMC,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAP,CAAkB;AACtC,sBAAgB;AADsB,KAAlB,CAAtB;AAGA,QAAID,OAAO,CAACE,KAAZ,EAAmB,OAAOF,OAAO,CAACE,KAAf;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BC,WAAW,CAACC,IAAK,GAA1D;AACD;;AAED,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAA2BtB,QAAQ,CAAC,EAAD,CAAzC,CATsB,CAUtB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewB,UAAf,GAA4B;AAC1B,YAAMC,UAAU,GAAG,MAAMX,kBAAkB,EAA3C;AACAS,MAAAA,aAAa,CAAC,CAAC,GAAGE,UAAJ,CAAD,CAAb;AACD;;AACDD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT;AAQA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASGF,OAAO,CAACI,MAAR,GAAiB,CAAjB,GACGJ,OAAO,CAACK,GAAR,CAAYC,CAAC,IACX,MAAC,OAAD;AACE,IAAA,IAAI,EAAEA,CAAC,CAACC,MAAF,CAASR,IADjB;AAEE,IAAA,KAAK,EAAEO,CAAC,CAACC,MAAF,CAASC,KAFlB;AAGE,IAAA,MAAM,EAAEF,CAAC,CAACC,MAAF,CAASC,KAHnB;AAIE,IAAA,UAAU,EAAEF,CAAC,CAACC,MAAF,CAASE,UAJvB;AAKE,IAAA,MAAM,EAAEH,CAAC,CAACC,MAAF,CAASG,MALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAUG,IAnBN,CADF;AAuBD;;AAED,eAAenB,YAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport ImageLink from '../components/imageLink'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction Mannschaften() {\n  async function fetchPlayerEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'player'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  const [players, setImageLinks] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getPlayers() {\n      const allPlayers = await fetchPlayerEntries()\n      setImageLinks([...allPlayers])\n    }\n    getPlayers()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>Spieler</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\" \n        />\n      </Head>\n      {players.length > 0\n        ? players.map(p => (\n            <Players\n              name={p.fields.name}\n              image={p.fields.image}\n              nummer={p.fields.image}\n              mannschaft={p.fields.mannschaft}\n              active={p.fields.active}\n            />\n          ))\n        : null}\n    </>\n  )\n}\n\nexport default Mannschaften"]},"metadata":{},"sourceType":"module"}