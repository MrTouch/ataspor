{"ast":null,"code":"var _jsxFileName = \"/home/aytac/repos/ataspor/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport BigImageTeaser from '../components/bigImageTeaser';\nimport Navigation from '../components/navigation';\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  async function fetchSettingsEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'settings'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  async function fetchBigImageTeasers() {\n    const bigImageTeasers = await client.getEntries({\n      'content_type': 'bigImageTeaser'\n    });\n    if (bigImageTeasers.items) return bigImageTeasers.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const {\n    0: settings,\n    1: setImageSettingsLinks\n  } = useState([]);\n  const {\n    0: bigImageTeasers,\n    1: setBigImageTeasers\n  } = useState([]); //useEffect hook retrieves posts on initial load.\n\n  useEffect(() => {\n    async function getSettings() {\n      const allSettings = await fetchSettingsEntries();\n      console.log(allSettings);\n      setImageSettingsLinks([...allSettings]);\n    }\n\n    async function getBigImageTeasers() {\n      const allBigImageTeasers = await fetchBigImageTeasers();\n      console.log('allbigimageteasers', allBigImageTeasers);\n      setBigImageTeasers([...allBigImageTeasers]);\n    }\n\n    getBigImageTeasers();\n    getSettings();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Ataspor\")), settings.length > 0 ? settings.map(p => __jsx(Navigation, {\n    activePage: \"Home\",\n    logo: p.fields.logo.fields.file.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  })) : null, \"test\", bigImageTeasers.length > 0 ? bigImageTeasers.map(bIT => __jsx(BigImageTeaser, {\n    displayTitle: bIT.fields.displaytitle,\n    image: bIT.fields.image.fields.file.url,\n    url: bIT.fields.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  })) : null);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/index.js"],"names":["useEffect","useState","Head","BigImageTeaser","Navigation","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","HomePage","fetchSettingsEntries","entries","getEntries","items","console","log","contentType","name","fetchBigImageTeasers","bigImageTeasers","settings","setImageSettingsLinks","setBigImageTeasers","getSettings","allSettings","getBigImageTeasers","allBigImageTeasers","length","map","p","fields","logo","file","url","bIT","displaytitle","image"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport BigImageTeaser from '../components/bigImageTeaser'\nimport Navigation from '../components/navigation'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n\n  async function fetchSettingsEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'settings'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n  \n  async function fetchBigImageTeasers() {\n    const bigImageTeasers = await client.getEntries({\n      'content_type': 'bigImageTeaser'\n    })\n    if (bigImageTeasers.items) return bigImageTeasers.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  const [settings, setImageSettingsLinks] = useState([])\n  const [bigImageTeasers, setBigImageTeasers] = useState([])\n\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n\n      async function getSettings() {\n        const allSettings = await fetchSettingsEntries()\n        console.log(allSettings);\n        setImageSettingsLinks([...allSettings])\n      }\n      \n      async function getBigImageTeasers() {\n        const allBigImageTeasers = await fetchBigImageTeasers()\n        console.log('allbigimageteasers', allBigImageTeasers);\n        setBigImageTeasers([...allBigImageTeasers])\n      }\n\n      getBigImageTeasers()\n      getSettings()\n\n  }, [])\n\n\n  return (\n    <>\n      <Head>\n        <title>Ataspor</title>\n      </Head>\n     {\n        settings.length > 0\n        ? settings.map(p => (\n           <Navigation activePage=\"Home\" logo={p.fields.logo.fields.file.url}></Navigation>\n          ))\n        : null\n      }\ntest\n      {\n        bigImageTeasers.length > 0\n        ? bigImageTeasers.map(bIT => (\n         <BigImageTeaser displayTitle={bIT.fields.displaytitle} image={bIT.fields.image.fields.file.url} url={bIT.fields.url}></BigImageTeaser>\n        ))\n        : null\n      }\n\n      \n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}