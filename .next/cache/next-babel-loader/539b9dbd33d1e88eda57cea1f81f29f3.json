{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/aytac/repos/ataspor/pages/mannschaften.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Players from '../components/players';\nimport Navigation from '../components/navigation';\n\nvar client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction Mannschaften() {\n  _s();\n\n  var _this = this;\n\n  function fetchPlayerEntries() {\n    return _fetchPlayerEntries.apply(this, arguments);\n  }\n\n  function _fetchPlayerEntries() {\n    _fetchPlayerEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.getEntries({\n                'content_type': 'players'\n              });\n\n            case 2:\n              entries = _context3.sent;\n\n              if (!entries.items) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchPlayerEntries.apply(this, arguments);\n  }\n\n  function fetchSetting() {\n    return _fetchSetting.apply(this, arguments);\n  }\n\n  function _fetchSetting() {\n    _fetchSetting = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var setting;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.getEntry(\"lcWwEXxr4F2hazOseLmgf\");\n\n            case 2:\n              setting = _context4.sent;\n\n              if (setting) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", {});\n\n            case 5:\n              return _context4.abrupt(\"return\", setting);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _fetchSetting.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      players = _useState[0],\n      setImageLinks = _useState[1];\n\n  var _useState2 = useState([]),\n      setting = _useState2[0],\n      setSetting = _useState2[1]; //useEffect hook retrieves posts on initial load.\n\n\n  useEffect(function () {\n    function getPlayers() {\n      return _getPlayers.apply(this, arguments);\n    }\n\n    function _getPlayers() {\n      _getPlayers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var allPlayers, teams;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchPlayerEntries();\n\n              case 2:\n                allPlayers = _context.sent;\n                console.log(allPlayers);\n                teams = {\n                  MainTeam: [],\n                  SeniorTeam: []\n                };\n                allPlayers.forEach(function (player) {\n                  console.log(player);\n                  console.log(teams.MainTeam);\n\n                  if (player.fields.mannschaft == \"1. Mannschaft\") {\n                    teams.MainTeam.push(player);\n                  }\n\n                  if (player.fields.mannschaft == \"Senioren 30+\") {\n                    teams.SeniorTeam.push(player);\n                  }\n                });\n                console.log(teams);\n                setImageLinks(_toConsumableArray(allPlayers));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPlayers.apply(this, arguments);\n    }\n\n    function getSetting() {\n      return _getSetting.apply(this, arguments);\n    }\n\n    function _getSetting() {\n      _getSetting = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var setting;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetchSetting();\n\n              case 2:\n                setting = _context2.sent;\n                setSetting([setting]);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getSetting.apply(this, arguments);\n    }\n\n    getSetting();\n    getPlayers();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Spieler\")), setting.length > 0 ? setting.map(function (s) {\n    return __jsx(Navigation, {\n      activePage: \"Mannschaft\",\n      logo: s.fields.logo.fields.file.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    });\n  }) : null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"1. Mannschaft\"), players.length > 0 ? players.map(function (p) {\n    return __jsx(Players, {\n      key: p.fields.id,\n      name: p.fields.name,\n      image: p.fields.image,\n      nummer: p.fields.nummer,\n      mannschaft: p.fields.mannschaft,\n      active: p.fields.active,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    });\n  }) : null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Senioren\"));\n}\n\n_s(Mannschaften, \"kRH/NkpLz1cvppceAh/mCOFKvjQ=\");\n\n_c = Mannschaften;\nexport default Mannschaften;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mannschaften\");","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/mannschaften.js"],"names":["useEffect","useState","Head","Players","Navigation","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","Mannschaften","fetchPlayerEntries","getEntries","entries","items","console","log","contentType","name","fetchSetting","getEntry","setting","players","setImageLinks","setSetting","getPlayers","allPlayers","teams","MainTeam","SeniorTeam","forEach","player","fields","mannschaft","push","getSetting","length","map","s","logo","file","url","p","id","image","nummer","active"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport Players from '../components/players'\nimport Navigation from '../components/navigation'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\n\nfunction Mannschaften() {\n  async function fetchPlayerEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'players'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  async function fetchSetting(){\n    // Fetch main setting\n    const setting = await client.getEntry(\"lcWwEXxr4F2hazOseLmgf\")\n    // If nothing was found, return an empty object for props, or else there would\n    // be an error when Next tries to serialize an `undefined` value to JSON.\n    if (!setting) {\n      return {  }\n    }\n    return setting;\n      // Return the post as props\n     \n  }\n  \n\n  const [players, setImageLinks] = useState([])\n  const [setting, setSetting] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getPlayers() {\n      const allPlayers = await fetchPlayerEntries()\n      console.log(allPlayers);\n      var teams = {MainTeam: [], SeniorTeam: []};\n      allPlayers.forEach( player => {\n        console.log(player);\n        console.log(teams.MainTeam);\n        if(player.fields.mannschaft==\"1. Mannschaft\"){\n            teams.MainTeam.push(player);\n        }\n        if(player.fields.mannschaft==\"Senioren 30+\"){\n            teams.SeniorTeam.push(player);\n        }\n    })\n    console.log(teams)\n      setImageLinks([...allPlayers])\n    }\n\n    async function getSetting(){\n      const setting = await fetchSetting();\n      \n      setSetting([setting])\n    }\n    getSetting()\n    getPlayers()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>Spieler</title>\n      </Head>\n      {\n        setting.length > 0\n        ? setting.map(s => (\n           <Navigation activePage=\"Mannschaft\" logo={s.fields.logo.fields.file.url}></Navigation>\n          ))\n        : null\n      }\n      <h1>1. Mannschaft</h1>\n      {players.length > 0\n        ? players.map(p => (\n            <Players\n              key={p.fields.id}\n              name={p.fields.name}\n              image={p.fields.image}\n              nummer={p.fields.nummer}\n              mannschaft={p.fields.mannschaft}\n              active={p.fields.active}\n            />\n          ))\n        : null}\n        <h1>Senioren</h1>\n    </>\n  )\n}\n\nexport default Mannschaften"]},"metadata":{},"sourceType":"module"}