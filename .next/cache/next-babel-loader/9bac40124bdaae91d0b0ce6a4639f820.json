{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/aytac/repos/ataspor/pages/mannschaften.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Players from '../components/players';\n\nvar client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction Mannschaften() {\n  _s();\n\n  var _this = this;\n\n  function fetchPlayerEntries() {\n    return _fetchPlayerEntries.apply(this, arguments);\n  }\n\n  function _fetchPlayerEntries() {\n    _fetchPlayerEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.getEntries({\n                'content_type': 'players'\n              });\n\n            case 2:\n              entries = _context2.sent;\n\n              if (!entries.items) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchPlayerEntries.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      players = _useState[0],\n      setImageLinks = _useState[1]; //useEffect hook retrieves posts on initial load.\n\n\n  useEffect(function () {\n    function getPlayers() {\n      return _getPlayers.apply(this, arguments);\n    }\n\n    function _getPlayers() {\n      _getPlayers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var allPlayers, Players;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchPlayerEntries();\n\n              case 2:\n                allPlayers = _context.sent;\n                console.log(allPlayers);\n                Players = Object;\n                allPlayers.forEach(function (player) {\n                  console.log(player);\n\n                  if (player.fields.mannschaft == \"1. Mannschaft\") {\n                    Players.MainTeam.push(player);\n                  }\n\n                  if (player.fields.mannschaft == \"Senioren 30+\") {\n                    Players.SeniorTeam.push(player);\n                  }\n                });\n                setImageLinks(_toConsumableArray(allPlayers));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPlayers.apply(this, arguments);\n    }\n\n    getPlayers();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Spieler\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), players.length > 0 ? players.map(function (p) {\n    return __jsx(Players, {\n      key: p.fields.id,\n      name: p.fields.name,\n      image: p.fields.image,\n      nummer: p.fields.nummer,\n      mannschaft: p.fields.mannschaft,\n      active: p.fields.active,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    });\n  }) : null);\n}\n\n_s(Mannschaften, \"S1NFNfqHKnblAVzlGkZ1UA3ECvA=\");\n\n_c = Mannschaften;\nexport default Mannschaften;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mannschaften\");","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/mannschaften.js"],"names":["useEffect","useState","Head","Players","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","Mannschaften","fetchPlayerEntries","getEntries","entries","items","console","log","contentType","name","players","setImageLinks","getPlayers","allPlayers","Object","forEach","player","fields","mannschaft","MainTeam","push","SeniorTeam","length","map","p","id","image","nummer","active"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport Players from '../components/players'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction Mannschaften() {\n  async function fetchPlayerEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'players'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  const [players, setImageLinks] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getPlayers() {\n      const allPlayers = await fetchPlayerEntries()\n      console.log(allPlayers);\n      const Players = Object;\n      allPlayers.forEach( player => {\n        console.log(player)\n        if(player.fields.mannschaft==\"1. Mannschaft\"){\n            Players.MainTeam.push(player);\n        }\n        if(player.fields.mannschaft==\"Senioren 30+\"){\n            Players.SeniorTeam.push(player);\n        }\n    })\n      setImageLinks([...allPlayers])\n    }\n    getPlayers()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>Spieler</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\" \n        />\n      </Head>\n      {players.length > 0\n        ? players.map(p => (\n            <Players\n              key={p.fields.id}\n              name={p.fields.name}\n              image={p.fields.image}\n              nummer={p.fields.nummer}\n              mannschaft={p.fields.mannschaft}\n              active={p.fields.active}\n            />\n          ))\n        : null}\n    </>\n  )\n}\n\nexport default Mannschaften"]},"metadata":{},"sourceType":"module"}