{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/aytac/repos/ataspor/pages/mannschaften.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Players from '../components/players';\nimport Navi from '../components/navi';\n\nvar client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction Mannschaften(_ref) {\n  _s();\n\n  var _this = this;\n\n  var setting = _ref.setting;\n\n  function fetchPlayerEntries() {\n    return _fetchPlayerEntries.apply(this, arguments);\n  }\n\n  function _fetchPlayerEntries() {\n    _fetchPlayerEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.getEntries({\n                'content_type': 'players'\n              });\n\n            case 2:\n              entries = _context2.sent;\n\n              if (!entries.items) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchPlayerEntries.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      players = _useState[0],\n      setImageLinks = _useState[1]; //useEffect hook retrieves posts on initial load.\n\n\n  useEffect(function () {\n    function getPlayers() {\n      return _getPlayers.apply(this, arguments);\n    }\n\n    function _getPlayers() {\n      _getPlayers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var allPlayers, teams;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchPlayerEntries();\n\n              case 2:\n                allPlayers = _context.sent;\n                console.log(allPlayers);\n                teams = {\n                  MainTeam: [],\n                  SeniorTeam: []\n                };\n                allPlayers.forEach(function (player) {\n                  console.log(player);\n                  console.log(teams.MainTeam);\n\n                  if (player.fields.mannschaft == \"1. Mannschaft\") {\n                    teams.MainTeam.push(player);\n                  }\n\n                  if (player.fields.mannschaft == \"Senioren 30+\") {\n                    teams.SeniorTeam.push(player);\n                  }\n                });\n                console.log(teams);\n                setImageLinks(_toConsumableArray(allPlayers));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPlayers.apply(this, arguments);\n    }\n\n    getPlayers();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Spieler\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), setting.length > 0 ? setting.map(function (s) {\n    return __jsx(Navi, {\n      activePage: \"Mannschaft\",\n      logo: s.fields.logo.fields.file.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    });\n  }) : null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"1. Mannschaft\"), players.length > 0 ? players.map(function (p) {\n    return __jsx(Players, {\n      key: p.fields.id,\n      name: p.fields.name,\n      image: p.fields.image,\n      nummer: p.fields.nummer,\n      mannschaft: p.fields.mannschaft,\n      active: p.fields.active,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    });\n  }) : null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Senioren\"));\n}\n\n_s(Mannschaften, \"S1NFNfqHKnblAVzlGkZ1UA3ECvA=\");\n\n_c = Mannschaften;\nexport var __N_SSG = true;\nexport default Mannschaften;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mannschaften\");","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/mannschaften.js"],"names":["useEffect","useState","Head","Players","Navi","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","Mannschaften","setting","fetchPlayerEntries","getEntries","entries","items","console","log","contentType","name","players","setImageLinks","getPlayers","allPlayers","teams","MainTeam","SeniorTeam","forEach","player","fields","mannschaft","push","length","map","s","logo","file","url","p","id","image","nummer","active"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport Players from '../components/players'\nimport Navi from '../components/navi'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\n\nexport async function getStaticProps(context) {\n  // Create an instance of the Contentful JavaScript SDK\n  const client = require('contentful').createClient({\n    space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n    accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n  })\n\n  // Fetch all results where `fields.slug` is equal to the `slug` param\n  const result = await client\n    .getEntries({\n      content_type: \"settings\"\n    })\n    .then((response) => response.items)\n\n  // Since `slug` was set to be a unique field, we can be confident that\n  // the only result in the query is the correct post.\n  const setting = result.pop()\n\n  // If nothing was found, return an empty object for props, or else there would\n  // be an error when Next tries to serialize an `undefined` value to JSON.\n  if (!setting) {\n    return { props: {} }\n  }\n\n    // Return the post as props\n    return {\n      props: {\n        setting,\n      },\n    }\n}\n\nfunction Mannschaften({ setting }) {\n  async function fetchPlayerEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'players'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  const [players, setImageLinks] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getPlayers() {\n      const allPlayers = await fetchPlayerEntries()\n      console.log(allPlayers);\n      var teams = {MainTeam: [], SeniorTeam: []};\n      allPlayers.forEach( player => {\n        console.log(player)\n        console.log(teams.MainTeam)\n        if(player.fields.mannschaft==\"1. Mannschaft\"){\n            teams.MainTeam.push(player);\n        }\n        if(player.fields.mannschaft==\"Senioren 30+\"){\n            teams.SeniorTeam.push(player);\n        }\n    })\n    console.log(teams)\n      setImageLinks([...allPlayers])\n    }\n    getPlayers()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>Spieler</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\" \n        />\n      </Head>\n      {\n        setting.length > 0\n        ? setting.map(s => (\n           <Navi activePage=\"Mannschaft\" logo={s.fields.logo.fields.file.url}></Navi>\n          ))\n        : null\n      }\n      <h1>1. Mannschaft</h1>\n      {players.length > 0\n        ? players.map(p => (\n            <Players\n              key={p.fields.id}\n              name={p.fields.name}\n              image={p.fields.image}\n              nummer={p.fields.nummer}\n              mannschaft={p.fields.mannschaft}\n              active={p.fields.active}\n            />\n          ))\n        : null}\n        <h1>Senioren</h1>\n    </>\n  )\n}\n\nexport default Mannschaften"]},"metadata":{},"sourceType":"module"}