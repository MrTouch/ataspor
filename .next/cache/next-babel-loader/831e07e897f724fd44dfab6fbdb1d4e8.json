{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/aytac/repos/ataspor/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport ImageLink from '../components/imageLink';\nimport Navigation from '../components/navigation';\n\nvar client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  function fetchPageEntries() {\n    return _fetchPageEntries.apply(this, arguments);\n  }\n\n  function _fetchPageEntries() {\n    _fetchPageEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.getEntries({\n                'content_type': 'page'\n              });\n\n            case 2:\n              entries = _context3.sent;\n\n              if (!entries.items) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchPageEntries.apply(this, arguments);\n  }\n\n  function fetchSettingsEntries() {\n    return _fetchSettingsEntries.apply(this, arguments);\n  }\n\n  function _fetchSettingsEntries() {\n    _fetchSettingsEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.getEntries({\n                'content_type': 'settings'\n              });\n\n            case 2:\n              entries = _context4.sent;\n\n              if (!entries.items) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _fetchSettingsEntries.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      settings = _useState[0],\n      setImageSettingsLinks = _useState[1]; //useEffect hook retrieves posts on initial load.\n\n\n  useEffect(function () {\n    function getSettings() {\n      return _getSettings.apply(this, arguments);\n    }\n\n    function _getSettings() {\n      _getSettings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var allSettings;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchSettingsEntries();\n\n              case 2:\n                allSettings = _context.sent;\n                console.log(allSettings);\n                setImageSettingsLinks(_toConsumableArray(allSettings));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getSettings.apply(this, arguments);\n    }\n\n    getSettings();\n  }, []);\n\n  var _useState2 = useState([]),\n      pages = _useState2[0],\n      setImageLinks = _useState2[1]; //useEffect hook retrieves posts on initial load.\n\n\n  useEffect(function () {\n    function getImageLinks() {\n      return _getImageLinks.apply(this, arguments);\n    }\n\n    function _getImageLinks() {\n      _getImageLinks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var allPages;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetchPageEntries();\n\n              case 2:\n                allPages = _context2.sent;\n                console.log(\"allpages\");\n                console.log(allPages);\n                setImageLinks(_toConsumableArray(allPages));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getImageLinks.apply(this, arguments);\n    }\n\n    getImageLinks();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Next.js + Contentful\")), console.log(\"settings 2\", settings), settings.length > 0 ? settings.map(function (p) {\n    return __jsx(Navigation, {\n      activePage: \"Home\",\n      logo: p.fields.logo.fields.file.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  }) : null);\n}\n\n_s(HomePage, \"xc164Z1nh+hklXZEIV7nhXp0iOQ=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/index.js"],"names":["useEffect","useState","Head","ImageLink","Navigation","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","HomePage","fetchPageEntries","getEntries","entries","items","console","log","contentType","name","fetchSettingsEntries","settings","setImageSettingsLinks","getSettings","allSettings","pages","setImageLinks","getImageLinks","allPages","length","map","p","fields","logo","file","url"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport ImageLink from '../components/imageLink'\nimport Navigation from '../components/navigation'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchPageEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  async function fetchSettingsEntries() {\n    const entries = await client.getEntries({\n    'content_type': 'settings'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n}\n\nconst [settings, setImageSettingsLinks] = useState([])\n//useEffect hook retrieves posts on initial load.\nuseEffect(() => {\n    async function getSettings() {\n    const allSettings = await fetchSettingsEntries()\n    console.log(allSettings);\n    setImageSettingsLinks([...allSettings])\n    }\n    getSettings()\n}, [])\n\n  const [pages, setImageLinks] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getImageLinks() {\n      const allPages = await fetchPageEntries()\n      console.log(\"allpages\")\n      console.log(allPages)\n      setImageLinks([...allPages])\n    }\n    getImageLinks()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n      </Head>\n      {console.log(\"settings 2\",settings)}{\n        settings.length > 0\n        ? settings.map(p => (\n           <Navigation activePage=\"Home\" logo={p.fields.logo.fields.file.url} ></Navigation>\n          ))\n        : null}\n      \n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}