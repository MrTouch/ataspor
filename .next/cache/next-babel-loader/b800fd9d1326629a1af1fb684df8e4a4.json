{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/aytac/repos/ataspor/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport ImageLink from '../components/imageLink';\nimport Navigation from '../components/navigation';\n\nvar client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  function fetchPageEntries() {\n    return _fetchPageEntries.apply(this, arguments);\n  }\n\n  function _fetchPageEntries() {\n    _fetchPageEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.getEntries({\n                'content_type': 'page'\n              });\n\n            case 2:\n              entries = _context2.sent;\n\n              if (!entries.items) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchPageEntries.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      pages = _useState[0],\n      setImageLinks = _useState[1]; //useEffect hook retrieves posts on initial load.\n\n\n  useEffect(function () {\n    function getImageLinks() {\n      return _getImageLinks.apply(this, arguments);\n    }\n\n    function _getImageLinks() {\n      _getImageLinks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var allPages;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchPageEntries();\n\n              case 2:\n                allPages = _context.sent;\n                setImageLinks(_toConsumableArray(allPages));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getImageLinks.apply(this, arguments);\n    }\n\n    getImageLinks();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Next.js + Contentful\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), pages.length > 0 ? pages.map(function (p) {\n    return __jsx(ImageLink, {\n      alt: p.fields.alt,\n      date: p.fields.date,\n      key: p.fields.title,\n      image: p.fields.image,\n      title: p.fields.title,\n      url: p.fields.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    });\n  }) : null);\n}\n\n_s(HomePage, \"AuNNG6J9wLQgm5mqUKNxY/iGLao=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/index.js"],"names":["useEffect","useState","Head","ImageLink","Navigation","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","HomePage","fetchPageEntries","getEntries","entries","items","console","log","contentType","name","pages","setImageLinks","getImageLinks","allPages","length","map","p","fields","alt","date","title","image","url"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BAD6B;AAEhDC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFuB,CAAnC,CAAf;;AAKA,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,WACHC,gBADG;AAAA;AAAA;;AAAA;AAAA,iFAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACwBV,MAAM,CAACW,UAAP,CAAkB;AACtC,gCAAgB;AADsB,eAAlB,CADxB;;AAAA;AACQC,cAAAA,OADR;;AAAA,mBAIMA,OAAO,CAACC,KAJd;AAAA;AAAA;AAAA;;AAAA,gDAI4BD,OAAO,CAACC,KAJpC;;AAAA;AAKEC,cAAAA,OAAO,CAACC,GAAR,qCAAyCC,WAAW,CAACC,IAArD;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADkB;AAAA;AAAA;;AAAA,kBASarB,QAAQ,CAAC,EAAD,CATrB;AAAA,MASXsB,KATW;AAAA,MASJC,aATI,iBAUlB;;;AACAxB,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCyB,aADD;AAAA;AAAA;;AAAA;AAAA,gFACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyBV,gBAAgB,EADzC;;AAAA;AACQW,gBAAAA,QADR;AAEEF,gBAAAA,aAAa,oBAAKE,QAAL,EAAb;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAKdD,IAAAA,aAAa;AACd,GANQ,EAMN,EANM,CAAT;AAQA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,4BAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAWGF,KAAK,CAACI,MAAN,GAAe,CAAf,GACGJ,KAAK,CAACK,GAAN,CAAU,UAAAC,CAAC;AAAA,WACT,MAAC,SAAD;AACE,MAAA,GAAG,EAAEA,CAAC,CAACC,MAAF,CAASC,GADhB;AAEE,MAAA,IAAI,EAAEF,CAAC,CAACC,MAAF,CAASE,IAFjB;AAGE,MAAA,GAAG,EAAEH,CAAC,CAACC,MAAF,CAASG,KAHhB;AAIE,MAAA,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASI,KAJlB;AAKE,MAAA,KAAK,EAAEL,CAAC,CAACC,MAAF,CAASG,KALlB;AAME,MAAA,GAAG,EAAEJ,CAAC,CAACC,MAAF,CAASK,GANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAX,CADH,GAWG,IAtBN,CADF;AA0BD;;GA7CQrB,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport ImageLink from '../components/imageLink'\nimport Navigation from '../components/navigation'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchPageEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  const [pages, setImageLinks] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getImageLinks() {\n      const allPages = await fetchPageEntries()\n      setImageLinks([...allPages])\n    }\n    getImageLinks()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://css.zeit.sh/v1.css\"\n          type=\"text/css\" \n        />\n      </Head>\n      <Navigation></Navigation>\n      \n      {pages.length > 0\n        ? pages.map(p => (\n            <ImageLink\n              alt={p.fields.alt}\n              date={p.fields.date}\n              key={p.fields.title}\n              image={p.fields.image}\n              title={p.fields.title}\n              url={p.fields.url}\n            />\n          ))\n        : null}\n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}