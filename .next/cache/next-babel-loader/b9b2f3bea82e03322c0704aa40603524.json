{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/aytac/repos/ataspor/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport ImageLink from '../components/imageLink';\nimport Navigation from '../components/navigation';\n\nvar client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  _s();\n\n  var _this = this;\n\n  function fetchPageEntries() {\n    return _fetchPageEntries.apply(this, arguments);\n  }\n\n  function _fetchPageEntries() {\n    _fetchPageEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return client.getEntries({\n                'content_type': 'page'\n              });\n\n            case 2:\n              entries = _context4.sent;\n\n              if (!entries.items) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _fetchPageEntries.apply(this, arguments);\n  }\n\n  function fetchSettingsEntries() {\n    return _fetchSettingsEntries.apply(this, arguments);\n  }\n\n  function _fetchSettingsEntries() {\n    _fetchSettingsEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return client.getEntries({\n                'content_type': 'settings'\n              });\n\n            case 2:\n              entries = _context5.sent;\n\n              if (!entries.items) {\n                _context5.next = 5;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _fetchSettingsEntries.apply(this, arguments);\n  }\n\n  function fetchBigImageTeasersEntries() {\n    return _fetchBigImageTeasersEntries.apply(this, arguments);\n  }\n  /*\n    async function fetchPageEntries() {\n      const entries = await client.getEntries({\n        'content_type': 'page'\n      })\n      if (entries.items) return entries.items\n      console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n  */\n\n\n  function _fetchBigImageTeasersEntries() {\n    _fetchBigImageTeasersEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return client.getEntries({\n                'content_type': 'bigImageTeasers'\n              });\n\n            case 2:\n              entries = _context6.sent;\n\n              if (!entries.items) {\n                _context6.next = 5;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _fetchBigImageTeasersEntries.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      settings = _useState[0],\n      setImageSettingsLinks = _useState[1];\n\n  var _useState2 = useState([]),\n      bigImageTeaser = _useState2[0],\n      setBigImageTeasersLinks = _useState2[1];\n\n  var _useState3 = useState([]),\n      page = _useState3[0],\n      setPageLinks = _useState3[1]; //useEffect hook retrieves posts on initial load.\n\n\n  useEffect(function () {\n    function getSettings() {\n      return _getSettings.apply(this, arguments);\n    }\n\n    function _getSettings() {\n      _getSettings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var allSettings;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchSettingsEntries();\n\n              case 2:\n                allSettings = _context.sent;\n                console.log(allSettings);\n                setImageSettingsLinks(_toConsumableArray(allSettings));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getSettings.apply(this, arguments);\n    }\n\n    function getBigImageTeasers() {\n      return _getBigImageTeasers.apply(this, arguments);\n    }\n\n    function _getBigImageTeasers() {\n      _getBigImageTeasers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var allBigImageTeasers;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetchBigImageTeasersEntries();\n\n              case 2:\n                allBigImageTeasers = _context2.sent;\n                console.log(allBigImageTeasers);\n                setBigImageTeasersLinks(_toConsumableArray(allBigImageTeasers));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getBigImageTeasers.apply(this, arguments);\n    }\n\n    function getPages() {\n      return _getPages.apply(this, arguments);\n    }\n\n    function _getPages() {\n      _getPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var allPages;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetchPageEntries();\n\n              case 2:\n                allPages = _context3.sent;\n                console.log(allPages);\n                setPageLinks(_toConsumableArray(allPages));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _getPages.apply(this, arguments);\n    }\n\n    getSettings();\n    getBigImageTeasers();\n    getPages();\n  }, []);\n  /*\n    const [pages, setImageLinks] = useState([])\n    //useEffect hook retrieves posts on initial load.\n    useEffect(() => {\n      async function getImageLinks() {\n        const allPages = await fetchPageEntries()\n        setImageLinks([...allPages])\n      }\n      getImageLinks()\n    }, [])\n  */\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Ataspor\")), settings.length > 0 ? settings.map(function (p) {\n    return __jsx(Navigation, {\n      activePage: \"Home\",\n      logo: p.fields.logo.fields.file.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 12\n      }\n    });\n  }) : null, page.length > 0 ? page.map(function (p) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Test\");\n  }) : null);\n}\n\n_s(HomePage, \"xz5d16lmFgsEgPupkwkm2AWOvJY=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/index.js"],"names":["useEffect","useState","Head","ImageLink","Navigation","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","HomePage","fetchPageEntries","getEntries","entries","items","console","log","contentType","name","fetchSettingsEntries","fetchBigImageTeasersEntries","settings","setImageSettingsLinks","bigImageTeaser","setBigImageTeasersLinks","page","setPageLinks","getSettings","allSettings","getBigImageTeasers","allBigImageTeasers","getPages","allPages","length","map","p","fields","logo","file","url"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport ImageLink from '../components/imageLink'\nimport Navigation from '../components/navigation'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchPageEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  async function fetchSettingsEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'settings'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n}\n\n  async function fetchBigImageTeasersEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'bigImageTeasers'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n/*\n  async function fetchPageEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n*/\nconst [settings, setImageSettingsLinks] = useState([])\nconst [bigImageTeaser, setBigImageTeasersLinks] = useState([])\nconst [page, setPageLinks] = useState([])\n//useEffect hook retrieves posts on initial load.\nuseEffect(() => {\n\n    async function getSettings() {\n      const allSettings = await fetchSettingsEntries()\n      console.log(allSettings);\n      setImageSettingsLinks([...allSettings])\n    }\n\n    async function getBigImageTeasers() {\n      const allBigImageTeasers = await fetchBigImageTeasersEntries()\n      console.log(allBigImageTeasers);\n      setBigImageTeasersLinks([...allBigImageTeasers])\n    }\n\n    async function getPages() {\n      const allPages = await fetchPageEntries()\n      console.log(allPages);\n      setPageLinks([...allPages])\n    }\n\n    getSettings()\n    getBigImageTeasers()\n    getPages()\n\n}, [])\n\n\n\n/*\n  const [pages, setImageLinks] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getImageLinks() {\n      const allPages = await fetchPageEntries()\n      setImageLinks([...allPages])\n    }\n    getImageLinks()\n  }, [])\n*/\n  return (\n    <>\n      <Head>\n        <title>Ataspor</title>\n      </Head>\n     {\n        settings.length > 0\n        ? settings.map(p => (\n           <Navigation activePage=\"Home\" logo={p.fields.logo.fields.file.url} ></Navigation>\n          ))\n        : null\n      }\n      {\n        page.length > 0\n        ? page.map(p=>(\n          <div>Test</div>\n        ))\n        :null\n        }\n      \n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}