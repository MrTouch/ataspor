{"ast":null,"code":"var _jsxFileName = \"/home/aytac/repos/ataspor/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport ImageLink from '../components/imageLink';\nimport Navigation from '../components/navigation';\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  async function fetchPageEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for page.`);\n  }\n\n  async function fetchHomePage() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  async function fetchSettingsEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'settings'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  async function fetchBigImageTeasersEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'bigImageTeasers'\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for bigImageTeasers.`);\n  }\n  /*\n    async function fetchPageEntries() {\n      const entries = await client.getEntries({\n        'content_type': 'page'\n      })\n      if (entries.items) return entries.items\n      console.log(`Error getting Entries for ${contentType.name}.`)\n    }\n  */\n\n\n  const {\n    0: settings,\n    1: setImageSettingsLinks\n  } = useState([]);\n  const {\n    0: bigImageTeaser,\n    1: setBigImageTeasersLinks\n  } = useState([]);\n  const {\n    0: page,\n    1: setPageLinks\n  } = useState([]);\n  const {\n    0: home,\n    1: setHomeLink\n  } = useState([]); //useEffect hook retrieves posts on initial load.\n\n  useEffect(() => {\n    async function getSettings() {\n      const allSettings = await fetchSettingsEntries();\n      console.log(allSettings);\n      setImageSettingsLinks([...allSettings]);\n    }\n\n    async function getBigImageTeasers() {\n      const allBigImageTeasers = await fetchBigImageTeasersEntries();\n      console.log(allBigImageTeasers);\n      setBigImageTeasersLinks([...allBigImageTeasers]);\n    }\n\n    async function getPages() {\n      const allPages = await fetchPageEntries();\n      console.log(\"allpages\", allPages);\n      setPageLinks([...allPages]);\n    }\n\n    async function getHome() {\n      const homePage = await fetchHomePage();\n      console.log(homePage, 'test');\n      setHomeLink([...homePage]);\n    }\n\n    getSettings(); //getBigImageTeasers()\n    //getPages()\n\n    getHome();\n  }, []);\n  /*\n    const [pages, setImageLinks] = useState([])\n    //useEffect hook retrieves posts on initial load.\n    useEffect(() => {\n      async function getImageLinks() {\n        const allPages = await fetchPageEntries()\n        setImageLinks([...allPages])\n      }\n      getImageLinks()\n    }, [])\n  */\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Ataspor\")), settings.length > 0 ? settings.map(p => __jsx(Navigation, {\n    activePage: \"Home\",\n    logo: p.fields.logo.fields.file.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }\n  })) : null, home.length > 0 ? home.map(p => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, p.fields.title, \"asdf\")) : null);\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/aytac/repos/ataspor/pages/index.js"],"names":["useEffect","useState","Head","ImageLink","Navigation","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","HomePage","fetchPageEntries","entries","getEntries","items","console","log","fetchHomePage","contentType","name","fetchSettingsEntries","fetchBigImageTeasersEntries","settings","setImageSettingsLinks","bigImageTeaser","setBigImageTeasersLinks","page","setPageLinks","home","setHomeLink","getSettings","allSettings","getBigImageTeasers","allBigImageTeasers","getPages","allPages","getHome","homePage","length","map","p","fields","logo","file","url","title"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport ImageLink from '../components/imageLink'\nimport Navigation from '../components/navigation'\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchPageEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for page.`)\n  }\n\n  async function fetchHomePage() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  async function fetchSettingsEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'settings'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n}\n\n  async function fetchBigImageTeasersEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'bigImageTeasers'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for bigImageTeasers.`)\n  }\n/*\n  async function fetchPageEntries() {\n    const entries = await client.getEntries({\n      'content_type': 'page'\n    })\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n*/\nconst [settings, setImageSettingsLinks] = useState([])\nconst [bigImageTeaser, setBigImageTeasersLinks] = useState([])\nconst [page, setPageLinks] = useState([])\nconst [home, setHomeLink] = useState([])\n//useEffect hook retrieves posts on initial load.\nuseEffect(() => {\n\n    async function getSettings() {\n      const allSettings = await fetchSettingsEntries()\n      console.log(allSettings);\n      setImageSettingsLinks([...allSettings])\n    }\n\n    async function getBigImageTeasers() {\n      const allBigImageTeasers = await fetchBigImageTeasersEntries()\n      console.log(allBigImageTeasers);\n      setBigImageTeasersLinks([...allBigImageTeasers])\n    }\n\n    async function getPages() {\n      const allPages = await fetchPageEntries()\n      console.log(\"allpages\",allPages);\n      setPageLinks([...allPages])\n    }\n\n    \n    async function getHome() {\n      const homePage = await fetchHomePage()\n      console.log(homePage, 'test');\n      setHomeLink([...homePage])\n    }\n\n    getSettings()\n    //getBigImageTeasers()\n    //getPages()\n    getHome()\n\n}, [])\n\n\n\n/*\n  const [pages, setImageLinks] = useState([])\n  //useEffect hook retrieves posts on initial load.\n  useEffect(() => {\n    async function getImageLinks() {\n      const allPages = await fetchPageEntries()\n      setImageLinks([...allPages])\n    }\n    getImageLinks()\n  }, [])\n*/\n  return (\n    <>\n      <Head>\n        <title>Ataspor</title>\n      </Head>\n     {\n        settings.length > 0\n        ? settings.map(p => (\n           <Navigation activePage=\"Home\" logo={p.fields.logo.fields.file.url}></Navigation>\n          ))\n        : null\n      }\n      {\n        home.length > 0\n        ? home.map(p=>(\n          <div>{p.fields.title}asdf</div>\n        ))\n        :null\n        }\n      \n    </>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}